(()=>{"use strict";var e="";const t=e+"c310e08eb3df9dfe7c35.png",n=e+"74c3c0fb802dcfa83abb.jpg",r=e+"83ecd1ca84b74dc9b512.png",o=e+"dec1abec284b6ed45d41.png",i=e+"cc6deb7349d71ca7a583.png",u=e+"223f012ebd08f3266d8f.png";function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,l(r.key),r)}}function l(e){var t=function(e){if("object"!=a(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}var s=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formElement=t,this.formSelector=n.formSelector,this.inputSelector=n.inputSelector,this.submitButtonSelector=n.submitButtonSelector,this.inactiveButtonClass=n.inactiveButtonClass,this.inputErrorClass=n.inputErrorClass,this.errorClass=n.errorClass,this.buttonElement=this.formElement.querySelector(n.submitButtonSelector),this.inputList=Array.from(this.formElement.querySelectorAll(this.inputSelector))},(t=[{key:"_showInputError",value:function(e,t){this.errorElement=this.formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this.inputErrorClass),this.errorElement.textContent=t,this.errorElement.classList.add(this.errorClass)}},{key:"_hideInputError",value:function(e){this.errorElement=this.formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this.inputErrorClass),this.errorElement.classList.remove(this.errorClass),this.errorElement.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this.buttonElement.classList.add(this.inactiveButtonClass),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove(this.inactiveButtonClass),this.buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetFormValidation",value:function(){var e=this;this.formElement.reset(),this.inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}},{key:"enableValidation",value:function(){this.formElement.addEventListener("keydown",(function(e){if(console.log(e.key),"Enter"===e.key)return!1})),this._setEventListeners()}}])&&c(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function m(e){var t=function(e){if("object"!=p(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==p(t)?t:t+""}var y=function(){return e=function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.title=t,this.link=n,this.template=r,this.handleOpenImage=o},(t=[{key:"_getCardClone",value:function(){return this.card=this.template.cloneNode(!0).content.querySelector(".elements__place"),this._setProperties(),this.cardImage.src=this.link,this.cardTitle.textContent=this.title,this.cardImage.alt=this.title,this.card}},{key:"_setProperties",value:function(){this.cardImage=this.card.querySelector(".elements__place-picture"),this.cardTitle=this.card.querySelector(".elements__box-name"),this.likeButton=this.card.querySelector(".elements__box-heart"),this.deleteButton=this.card.querySelector(".elements__place-delate"),this.deleteButton&&(this.deleteButton.src=u)}},{key:"_handleLike",value:function(){this.handlelike=this.likeButton.classList.toggle("elements__box-heart-active")}},{key:"_handleRemoveCard",value:function(){this._removeCard=this.card.remove()}},{key:"_handleOpenImageCard",value:function(){this.handleOpenImage(this.title,this.link)}},{key:"_setEventListeners",value:function(){var e=this;this.deleteButton.addEventListener("click",(function(){e._handleRemoveCard()})),this.cardImage.addEventListener("click",(function(){e._handleOpenImageCard()})),this.likeButton.addEventListener("click",(function(){e._handleLike()}))}},{key:"generateCard",value:function(){return this._getCardClone(),this._setEventListeners(),this.card}}])&&f(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,b(r.key),r)}}function b(e){var t=function(e){if("object"!=d(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:t+""}var h=function(){return e=function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nameElement=document.querySelector(n),this.aboutElement=document.querySelector(r)},(t=[{key:"getUserInfo",value:function(){return{name:this.nameElement.textContent,about:this.aboutElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this.nameElement.textContent=t,this.aboutElement.textContent=n}}])&&v(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),_=document.querySelector("#editForm"),E=_.querySelector("#editName"),S=_.querySelector("#editAbout"),g=document.querySelector("#addSave"),w=document.querySelector(".template"),k=document.querySelector("#addForm");function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,O(r.key),r)}}function O(e){var t=function(e){if("object"!=C(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==C(t)?t:t+""}var P=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=r,this._renderer=o,this.container=document.querySelector(n)},(t=[{key:"renderer",value:function(){var e=this;this.items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this.container.prepend(e)}}])&&j(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,I(r.key),r)}}function I(e){var t=function(e){if("object"!=B(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==B(t)?t:t+""}var q=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupElement=document.querySelector(t),this.popupCloseButton=this.popupElement.querySelector(".popup__close-button")||this.popupElement.querySelector(".popup__image-close-button"),this._handleEscClose=this._handleEscClose.bind(this),this.setEventListeners()},t=[{key:"open",value:function(){this.popupElement.classList.add("popup__opened"),g.classList.add("popup__button_disabled"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this.popupElement.classList.remove("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_isClickOutside",value:function(e){return e.target.classList.contains("popup__opened")}},{key:"setEventListeners",value:function(){var e=this;this.popupCloseButton.addEventListener("click",(function(){return e.close()})),this.popupElement.querySelector(".popup__container").addEventListener("click",(function(t){t.target.matches(".popup__container")&&e.close()}))}}],t&&L(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,x(r.key),r)}}function x(e){var t=function(e){if("object"!=T(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==T(t)?t:t+""}function V(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(V=function(){return!!e})()}function z(e,t,n,r){var o=D(F(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(null,arguments)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}function W(e,t){return W=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},W(e,t)}var A=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=function(e,t,n){return t=F(t),function(e,t){if(t&&("object"==T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,V()?Reflect.construct(t,n||[],F(e).constructor):t.apply(e,n))}(this,t,[e])).setEventListeners(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&W(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e,n){z(t,"open",this,3)([]);var r=this.popupElement.querySelector(".popup__image-open"),o=this.popupElement.querySelector(".popup__title");r.src=n,r.alt=e,o.textContent=e}},{key:"close",value:function(){z(t,"close",this,3)([])}}])&&R(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(q);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,N(r.key),r)}}function N(e){var t=function(e){if("object"!=M(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==M(t)?t:t+""}function Y(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Y=function(){return!!e})()}function G(e,t,n,r){var o=H(J(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},H.apply(null,arguments)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}function K(e,t){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},K(e,t)}var Q=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,n){return t=J(t),function(e,t){if(t&&("object"==M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Y()?Reflect.construct(t,n||[],J(e).constructor):t.apply(e,n))}(this,t,[e])).handleFormSubmit=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(t,e),n=t,r=[{key:"_getInputValues",value:function(){var e={},t=this.popupElement.querySelector("form");return Array.from(t.elements).forEach((function(t){t.name&&(e[t.name]=t.value)})),e}},{key:"setEventListeners",value:function(){var e=this;G(t,"setEventListeners",this,3)([]),this.popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){G(t,"close",this,3)([]),this.popupElement.querySelector("form").reset()}}],r&&U(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(q);document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("header");e&&(e.src=t);var a=document.getElementById("profileImage");a&&(a.src=n);var c=document.getElementById("openModal");c&&(c.src=r);var l=document.getElementById("profileEditImg");l&&(l.src=o);var s=document.getElementById("addCloseButton");s&&(s.src=i);var p=document.getElementById("editCloseButton");p&&(p.src=i);var f=document.getElementById("formClose");f&&(f.src=i);var m=document.getElementById("trashButton");m&&(m.src=u)}));var X=new s(_,{formSelector:".popup__form-profile",inputSelector:".popup__input-profile",submitButtonSelector:".popup__form-save-profile",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});X.enableValidation(),new s(k,{formSelector:".popup__form-add",inputSelector:".popup__input-add",submitButtonSelector:".popup__form-save-add",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}).enableValidation();var Z=new h({nameSelector:".profile__name",aboutSelector:".profile__description"}),$=(document.querySelector("#editSave"),new Q("#editProfile",(function(e){Z.setUserInfo({name:e.name,about:e.about})})));document.querySelector(".profile__edit").addEventListener("click",(function(){var e=Z.getUserInfo();X.resetFormValidation(),E.value=e.name,S.value=e.about,$.open()}));var ee=new Q("#addImage",(function(e){var t=new y(e.name,e.link,w,(function(e,t){return te.open(e,t)}));re.addItem(t.generateCard())}));document.querySelector(".profile__add").addEventListener("click",(function(){ee.open()}));var te=new A("#popup__image"),ne=document.querySelector(".popup__image-open");ne.addEventListener("click",(function(){ne.open()}));var re=new P({items:[{name:"Valle de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/yosemite.jpg"},{name:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lake-louise.jpg"},{name:"Montañas Calvas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/latemar.jpg"},{name:"Parque Nacional de la Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lago.jpg"}],renderer:function(e){var t=new y(e.name,e.link,w,(function(e,t){return te.open(e,t)}));re.addItem(t.generateCard())}},".elements__container-top");re.renderer()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,