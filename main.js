(()=>{"use strict";var e="";const t=e+"c310e08eb3df9dfe7c35.png",n=e+"74c3c0fb802dcfa83abb.jpg",r=e+"83ecd1ca84b74dc9b512.png",o=e+"dec1abec284b6ed45d41.png",i=e+"cc6deb7349d71ca7a583.png",a=e+"bbf66eb7b81dccb49b10.png";function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,l(r.key),r)}}function l(e){var t=function(e){if("object"!=c(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var s=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formElement=t,this.formSelector=n.formSelector,this.inputSelector=n.inputSelector,this.submitButtonSelector=n.submitButtonSelector,this.inactiveButtonClass=n.inactiveButtonClass,this.inputErrorClass=n.inputErrorClass,this.errorClass=n.errorClass,this.buttonElement=this.formElement.querySelector(n.submitButtonSelector),this.inputList=Array.from(this.formElement.querySelectorAll(this.inputSelector))},(t=[{key:"_showInputError",value:function(e,t){this.errorElement=this.formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this.inputErrorClass),this.errorElement.textContent=t,this.errorElement.classList.add(this.errorClass)}},{key:"_hideInputError",value:function(e){this.errorElement=this.formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this.inputErrorClass),this.errorElement.classList.remove(this.errorClass),this.errorElement.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this.buttonElement.classList.add(this.inactiveButtonClass),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove(this.inactiveButtonClass),this.buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetFormValidation",value:function(){var e=this;this.formElement.reset(),this.inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}},{key:"enableValidation",value:function(){this.formElement.addEventListener("keydown",(function(e){if(console.log(e.key),"Enter"===e.key)return!1})),this._setEventListeners()}}])&&u(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();const f=e+"223f012ebd08f3266d8f.png";function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,y(r.key),r)}}function y(e){var t=function(e){if("object"!=p(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==p(t)?t:t+""}var m=function(){return e=function e(t,n,r,o,i,a,c,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.title=t,this.link=n,this.template=r,this.handleOpenImage=o,this.handleLike=i,this.cardId=a,this.isLiked=c,this.handleDeleteClick=u},t=[{key:"_getCardClone",value:function(){return this.card=this.template.cloneNode(!0).content.querySelector(".elements__place"),this._setProperties(),this.cardImage.src=this.link,this.cardTitle.textContent=this.title,this.cardImage.alt=this.title,this.isLiked?this.likeButton.classList.add("elements__box-heart-active"):this.likeButton.classList.remove("elements__box-heart-active"),this.card}},{key:"_setProperties",value:function(){this.cardImage=this.card.querySelector(".elements__place-picture"),this.cardTitle=this.card.querySelector(".elements__box-name"),this.likeButton=this.card.querySelector(".elements__box-heart"),this.deleteButton=this.card.querySelector(".elements__place-delate"),this.deleteButton&&(this.deleteButton.src=f)}},{key:"_handleOpenImageCard",value:function(){this.handleOpenImage(this.title,this.link)}},{key:"_toggleLike",value:function(){this.isLiked=!this.isLiked,this.isLiked?this.likeButton.classList.add("elements__box-heart-active"):this.likeButton.classList.remove("elements__box-heart-active"),this.handleLike(this.cardId,this.isLiked)}},{key:"_setEventListeners",value:function(){var e=this;this.deleteButton.addEventListener("click",(function(){console.log("Eliminando tarjeta con ID:",e.cardId),e.handleDeleteClick(e.cardId,e.card)})),this.cardImage.addEventListener("click",(function(){e._handleOpenImageCard()})),this.likeButton.addEventListener("click",(function(){e._toggleLike()}))}},{key:"generateCard",value:function(){return this._getCardClone(),this._setEventListeners(),this.card}},{key:"handleDeleteClick",value:function(e,t,n){n.setSubmitAction((function(){api.deleteCard(e).then((function(){t.remove(),n.close()})).catch((function(e){return console.error("Error al eliminar la tarjeta:",e)}))})),n.open()}}],t&&d(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,b(r.key),r)}}function b(e){var t=function(e){if("object"!=h(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==h(t)?t:t+""}var _=function(){return e=function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nameElement=document.querySelector(n),this.aboutElement=document.querySelector(r)},(t=[{key:"getUserInfo",value:function(){return{name:this.nameElement.textContent,about:this.aboutElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this.nameElement.textContent=t,this.aboutElement.textContent=n}}])&&v(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),E=document.querySelector("#editForm"),g=E.querySelector("#editName"),S=E.querySelector("#editAbout"),k=document.querySelector("#addSave"),w=document.querySelector(".template"),j=document.querySelector("#addForm"),P=document.querySelector("#profileImage");function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e){if("object"!=C(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==C(t)?t:t+""}var I=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=r,this._renderer=o,this.container=document.querySelector(n)},(t=[{key:"setItems",value:function(e){this.items=e}},{key:"renderer",value:function(){var e=this;this.items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this.container.prepend(e)}}])&&O(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,q(r.key),r)}}function q(e){var t=function(e){if("object"!=B(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==B(t)?t:t+""}var A=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupElement=document.querySelector(t),this.popupCloseButton=this.popupElement.querySelector(".popup__close-button")||this.popupElement.querySelector(".popup__image-close-button"),this._handleEscClose=this._handleEscClose.bind(this),this.setEventListeners()},t=[{key:"open",value:function(){this.popupElement.classList.add("popup__opened"),k.classList.add("popup__button_disabled"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this.popupElement.classList.remove("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_isClickOutside",value:function(e){return e.target.classList.contains("popup__opened")}},{key:"setEventListeners",value:function(){var e=this;this.popupCloseButton.addEventListener("click",(function(){return e.close()})),this.popupElement.querySelector(".popup__container").addEventListener("click",(function(t){t.target.matches(".popup__container")&&e.close()}))}}],t&&T(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,D(r.key),r)}}function D(e){var t=function(e){if("object"!=R(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==R(t)?t:t+""}function U(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(U=function(){return!!e})()}function V(e,t,n,r){var o=z(F(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function z(){return z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},z.apply(null,arguments)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}function N(e,t){return N=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},N(e,t)}var G=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=function(e,t,n){return t=F(t),function(e,t){if(t&&("object"==R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,U()?Reflect.construct(t,n||[],F(e).constructor):t.apply(e,n))}(this,t,[e])).setEventListeners(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&N(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e,n){V(t,"open",this,3)([]);var r=this.popupElement.querySelector(".popup__image-open"),o=this.popupElement.querySelector(".popup__title");r.src=n,r.alt=e,o.textContent=e}},{key:"close",value:function(){V(t,"close",this,3)([])}}])&&x(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(A);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,H(r.key),r)}}function H(e){var t=function(e){if("object"!=M(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==M(t)?t:t+""}function K(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(K=function(){return!!e})()}function Q(e,t,n,r){var o=W(X(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function W(){return W="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=X(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},W.apply(null,arguments)}function X(e){return X=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},X(e)}function Y(e,t){return Y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Y(e,t)}var Z=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,n){return t=X(t),function(e,t){if(t&&("object"==M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,K()?Reflect.construct(t,n||[],X(e).constructor):t.apply(e,n))}(this,t,[e])).handleFormSubmit=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Y(e,t)}(t,e),n=t,r=[{key:"_getInputValues",value:function(){var e={},t=this.popupElement.querySelector("form");return Array.from(t.elements).forEach((function(t){t.name&&(e[t.name]=t.value)})),e}},{key:"setEventListeners",value:function(){var e=this;Q(t,"setEventListeners",this,3)([]),this.popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){Q(t,"close",this,3)([]),this.popupElement.querySelector("form").reset()}}],r&&J(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(A);function $(e){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$(e)}function ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,te(r.key),r)}}function te(e){var t=function(e){if("object"!=$(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=$(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==$(t)?t:t+""}var ne=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._mainUrl=t,this._headers=n},(t=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._mainUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getCards",value:function(){return fetch("".concat(this._mainUrl,"/cards/"),{method:"GET",headers:this._headers}).then((function(e){if(!e.ok)throw new Error("Error: ".concat(e.status));return e.json()}))}},{key:"updateProfile",value:function(e,t){return fetch("".concat(this._mainUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){if(!e.ok)throw new Error("Error al actualizar los datos: ".concat(e.status));return e.json()}))}},{key:"addCard",value:function(e,t){return fetch("".concat(this._mainUrl,"/cards/"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse).catch((function(e){throw console.error("Error al crear la carta: ".concat(e)),e}))}},{key:"toggleLikeCard",value:function(e,t){var n=t?"PUT":"DELETE";return fetch("".concat(this._mainUrl,"/cards/").concat(e,"/likes/"),{method:n,headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._mainUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse).catch((function(e){throw console.error("Error al eliminar la tarjeta: ".concat(e)),e}))}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._mainUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&ee(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function re(e){return re="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},re(e)}function oe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,ie(r.key),r)}}function ie(e){var t=function(e){if("object"!=re(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=re(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==re(t)?t:t+""}function ae(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(ae=function(){return!!e})()}function ce(){return ce="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=ue(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},ce.apply(null,arguments)}function ue(e){return ue=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ue(e)}function le(e,t){return le=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},le(e,t)}const se=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=function(e,t,n){return t=ue(t),function(e,t){if(t&&("object"==re(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ae()?Reflect.construct(t,n||[],ue(e).constructor):t.apply(e,n))}(this,t,[e])).submitAction=null,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&le(e,t)}(t,e),n=t,r=[{key:"setSubmitAction",value:function(e){this.submitAction=e}},{key:"setEventListeners",value:function(){var e,n,r,o=this;if((e=t,n=this,"function"==typeof(r=ce(ue(1&3?e.prototype:e),"setEventListeners",n))?function(e){return r.apply(n,e)}:r)([]),this.popupElement){var i=this.popupElement.querySelector(".popup__form-save-delete");i?i.addEventListener("click",(function(e){e.preventDefault(),o.submitAction&&o.submitAction()})):console.error("El botón de confirmación no se encuentra en el popup")}else console.error("El popup no se encuentra en el DOM")}}],r&&oe(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(A);document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("header");e&&(e.src=t);var c=document.getElementById("profileImage");c&&(c.src=n);var u=document.getElementById("openModal");u&&(u.src=r);var l=document.getElementById("profileEditImg");l&&(l.src=o);var s=document.getElementById("addCloseButton");s&&(s.src=i);var f=document.getElementById("editCloseButton");f&&(f.src=i);var p=document.getElementById("formClose");p&&(p.src=i);var d=document.getElementById("deleteCloseButton");d&&(d.src=i);var y=document.getElementById("vectorProfile");y&&(y.src=a);var m=document.getElementById("addCloseProfilePicture");m&&(m.src=i)}));var fe=new s(E,{formSelector:".popup__form-profile",inputSelector:".popup__input-profile",submitButtonSelector:".popup__form-save-profile",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});fe.enableValidation();var pe=new s(j,{formSelector:".popup__form-add",inputSelector:".popup__input-add",submitButtonSelector:".popup__form-save-add",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});pe.enableValidation();var de=new _({nameSelector:".profile__name",aboutSelector:".profile__description"}),ye=new Z("#editProfile",(function(e){var t=document.querySelector("#editSave");console.log("Formulario enviado, iniciando actualización..."),t.textContent="Guardando...",ge.updateProfile(e.name,e.about).then((function(e){console.log("Perfil actualizado correctamente:",e),de.setUserInfo({name:e.name,about:e.about}),ye.close()})).catch((function(e){console.error("Error al actualizar el perfil:",e)})).finally((function(){console.log("Actualización completada."),t.textContent="Guardar"}))}));document.querySelector(".profile__edit").addEventListener("click",(function(){var e=de.getUserInfo();fe.resetFormValidation(),g.value=e.name,S.value=e.about,ye.open()}));var me=new se("#deleteImage");document.addEventListener("DOMContentLoaded",(function(){me.setEventListeners()}));var he=function(e){var t=Array.isArray(e.likes)&&e.likes.some((function(e){return e._id===currentUserId}));return new m(e.name,e.link,w,(function(e,t){return be.open(e,t)}),(function(e,t){return ge.toggleLikeCard(e,t).then((function(e){console.log("Like actualizado en la API: ".concat(t),e)})).catch((function(e){throw console.error("Error al actualizar el like en la API:",e),e}))}),e._id,t,(function(e,t){me.setSubmitAction((function(){ge.deleteCard(e).then((function(){t.remove(),me.close()})).catch((function(e){return console.error("Error al eliminar la tarjeta:",e)}))})),me.open()}))},ve=new Z("#addImage",(function(e){ge.addCard(e.name,e.link).then((function(e){var t=he(e);Se.addItem(t.generateCard())})).catch((function(e){return console.error("Error al agregar tarjeta:",e)}))}));document.querySelector(".profile__add").addEventListener("click",(function(){pe.resetFormValidation(),ve.open()}));var be=new G("#popup__image"),_e=document.querySelector(".popup__image-open");_e.addEventListener("click",(function(){_e.open()}));var Ee=new Z("#addProfilePicture",(function(e){var t=document.getElementById("addSave"),n=e.link;t.textContent="Guardando...",t.disabled=!0,ge.updateAvatar(n).then((function(e){document.getElementById("profileImage").src=e.avatar,Ee.close()})).catch((function(e){console.error("Error al actualizar el avatar:",e),alert("No se pudo actualizar el avatar.Asegúrate de ingresar un enlace válido!!!!!!!!!.")})).finally((function(){t.textContent="Guardar",t.disabled=!1}))}));document.querySelector(".profile__picture-container").addEventListener("click",(function(){pe.resetFormValidation(),Ee.open()}));var ge=new ne("https://around-api.es.tripleten-services.com/v1",{authorization:"bb92e92e-c72d-476e-8c84-fd7d16914439","Content-Type":"application/json"}),Se=new I({items:[],renderer:function(e){var t=he(e);Se.addItem(t.generateCard())}},".elements__container-top");Se.renderer(),ge.getUserInfo().then((function(e){de.setUserInfo({name:e.name,about:e.about}),P.src=e.avatar,P.alt="Avatar de ".concat(e.name),console.log("Nombre:",e.name),console.log("About:",e.about),console.log("Avatar:",e.avatar)})).catch((function(e){console.error("Error al cargar la información del usuario:",e)}));var ke=document.querySelector(".elements__container-top");ge.getCards().then((function(e){console.log("Tarjetas obtenidas del servidor",e),e.forEach((function(e){var t=he(e).generateCard();ke.append(t)}))})).catch((function(e){return console.error("Error al cargar las tarjetas:",e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,